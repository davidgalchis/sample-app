{
    "components": {
        "domain": {
            "type": "@route53.record",
            "domain": "some.domain.com",
            "target_cloudfront_domain_name": "@dist:props.domain_name"
        },
        "dist": {
            "type": "@cloudfront.distribution",
            "aliases": [
                "some.domain.com"
            ],
            "oai_id": "@oai:props.id",
            "force_https": true,
            "price_class": "100",
            "allowed_methods": ["HEAD","GET","OPTIONS"],
            "target_domain_name": "@api:props.endpoint_with_stage",
            "additional_behaviors": [


                defaultBehavior: {
                    origin: serverOrigin,
                    allowedMethods: AllowedMethods.ALLOW_ALL,
                    cachePolicy: serverCachePolicy,
                    viewerProtocolPolicy: ViewerProtocolPolicy.REDIRECT_TO_HTTPS,
                },
                apigwServerPath: '/_server',
            apigwImagePath: '/_image',
                {
                    "path_pattern": "/api*",
                    "force_https": true,
                    "target": "domain",
                    "allowed_methods": ["HEAD", "GET", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"],
                    "cached_methods": ["HEAD", "GET"],
                    "cache_policy_name": "CachingDisabled"
                },
                {
                    "path_pattern": "/api*",
                    "force_https": true,
                    "target": "domain",
                    "allowed_methods": ["HEAD", "GET", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"],
                    "cached_methods": ["HEAD", "GET"],
                    "cache_policy_name": "CachingDisabled",
                    "origin_request_policy_id": ,
                    "response_headers_policy_id": ,
                }
                '/api*': {
				...defaultOptions,
				origin: customApiOrigin ?? serverOrigin,
				allowedMethods: AllowedMethods.ALLOW_ALL,
				cachePolicy: CachePolicy.CACHING_DISABLED,
			},
			'_next/data/*': {
				...defaultOptions,
				origin: serverOrigin,
			},
			'_next/image*': {
				...defaultOptions,
				origin: imageOrigin,
				cachePolicy: imagesCachePolicy,
				compress: true,
			},
			'_next/*': {
				...defaultOptions,
				origin: assetsOrigin,
			},
			'assets/*': {
				...defaultOptions,
				origin: assetsOrigin,
				cachePolicy: assetsCachePolicy,
			},
            ]
        },
        "oai": {
            "type": "@cloudfront.oai",
            "comment": "A origin access identity for some.domain.com"
        },
        "api": {
            "type": "@apigateway.api",
            "resources": {
                "/_server": {
                    "/{proxy+}": {
                        "OPTIONS": "@server_lambda:props.arn",
                        "GET": "@server_lambda:props.arn"
                    }
                },
                "/_image": {
                    "/{proxy+}": {
                        "OPTIONS": "@image_lambda:props.arn",
                        "GET": "@image_lambda:props.arn"
                    }
                }
            },
            "cors_enabled": true
        },
        "server_lambda": {
            "type": "@lambda.function",
            "timeout": 10,
            "policies": ["@tutorial_policy"],
            "environment_variables": {
                "table_name": "@tutorial_table:props.name"
            }
        },
        "image_lambda": {
            "type": "@lambda.function",
            "timeout": 10,
            "policies": ["@tutorial_policy"],
            "environment_variables": {
                "table_name": "@tutorial_table:props.name"
            }
        },
        "tutorial_policy": {
            "type": "@iam.policy",
            "description": "CloudKommand Tutorial Policy",
            "document": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "lambda:*",
                        "events:*",
                        "dynamodb:*",
                        "sns:*"
                    ],
                    "Resource": "*"
                }]
            }
        }
    },
    "repos": {
        "iam": "https://github.com/cloudkommand/iam",
        "lambda": "https://github.com/cloudkommand/lambda",
        "dynamodb": "https://github.com/cloudkommand/dynamodb",
        "apigateway": "https://github.com/cloudkommand/apigateway",
        "route53": "https://github.com/cloudkommand/route53"
        "cloudfront": "https://github.com/cloudkommand/cloudfront"
    }
}