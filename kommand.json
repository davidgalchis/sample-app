{
    "components": {
        "table": {
            "type": "@dynamodb.table",
            "skey_name":"skey",
            "gsis": {
              "alt1": {
                  "pkey_name": "alt1_pkey",
                  "skey_name": "alt1_skey"
              }
            }
        },
        "bucket": {
            "type": "@s3.bucket"
        },
        "api": {
            "type": "@apigateway.api",
            "resources": {
                "/api/v1/access": {
                  "ANY": "@access"
                },
                "/api/v1/dogs": {
                  "ANY": "@unauth_api_lambda"
                },
                "/api/v1/accounts": {
                    "POST": "@unauth_api_lambda"
                  },
                "/{proxy+}": {
                  "ANY": [
                    "@api_lambda:props.arn",
                    "auth"
                  ],
                  "OPTIONS": "@api_lambda:props.arn"
                }
              },
            "cors_enabled": true,
            "authorizers": {
                "auth": {
                  "lambda_arn": "@authorizer:props.arn",
                  "source": " $request.header.Authorization,$context.path,$context.httpMethod"
                }
            }
        },
        "authorizer": {
            "type": "@lambda.function",
            "description": "The authorizer for the API",
            "environment_variables": {
              "table_arn": "@table:props.arn",
              "s3_bucket_name": "@bucket:props.name",
              "user_pool_id": "@user_pool:props.id",
              "app_client_id": "@user_pool_client:props.id"
            },
            "layers": ["@layer"],
            "memory_size": 512,
            "policies": ["@policy"],
            "timeout": 30
        },
        "access": {
            "type": "@lambda.function",
            "description": "The unauthenticated access lambda for login",
            "layers": ["@layer"],
            "memory_size": 512,
            "policies": ["@policy"],
            "timeout": 30,
            "environment_variables": {
              "table_arn": "@table:props.arn",
              "user_pool_id": "@user_pool:props.id",
              "app_client_id": "@user_pool_client:props.id",
              "app_client_secret": "@user_pool_client:props.secret"
            }
        },
        "api_lambda": {
            "type": "@lambda.function",
            "description": "Dogs Mobile App Logic",
            "timeout": 10,
            "policies": ["@policy"],
            "layers": ["@layer"],
            "environment_variables": {
              "table_arn": "@table:props.arn",
              "s3_bucket_name": "@bucket:props.name",
              "user_pool_id": "@user_pool:props.id",
              "app_client_id": "@user_pool_client:props.id",
              "app_client_secret": "@user_pool_client:props.secret"
            }
        },
        "unauth_api_lambda": {
            "type": "@lambda.function",
            "description": "Unauthenticated Dogs Mobile App Logic",
            "memory_size": 256,
            "timeout": 30,
            "policies": ["@policy"],
            "layers": ["@layer"],
            "environment_variables": {
              "table_arn": "@table:props.arn",
              "user_pool_id": "@user_pool:props.id",
              "app_client_id": "@user_pool_client:props.id",
              "app_client_secret": "@user_pool_client:props.secret"
            }
        },
        "layer": {
            "type": "@lambda.layer",
            "requirements.txt": true
        },
        "user_pool": {
            "type": "@cognito.user_pool",
            "remember_device": "NEVER"
        },
        "user_pool_client": {
            "type": "@cognito.user_pool_client",
            "user_pool_id": "@user_pool:props.id",
            "access_token_expiration_minutes": 900,
            "auth_flows": ["ALLOW_CUSTOM_AUTH", "ALLOW_USER_SRP_AUTH", "ALLOW_REFRESH_TOKEN_AUTH", "ALLOW_ADMIN_USER_PASSWORD_AUTH"]
        },
        "policy": {
            "type": "@iam.policy",
            "description": "Dogs Mobile App Lambda Policy",
            "document": {
              "Statement": [
                {
                    "Action": ["s3:*"],
                    "Effect": "Allow",
                    "Resource": ["@bucket:props.arn", "@bucket:props.all_objects_arn"],
                    "Sid": "s3BucketPermissions"
                },
                {
                    "Action": ["dynamodb:*"],
                    "Effect": "Allow",
                    "Resource": ["@table:props.arn", "@table:props.all_indexes_arn"],
                    "Sid": "dynamodbTablePermissions"
                },
                {
                  "Action": ["cognito-idp:*"],
                  "Effect": "Allow",
                  "Resource": "@user_pool:props.arn",
                  "Sid": "userPoolPermissions"
                }
              ],
              "Version": "2012-10-17"
            }
        }
    },
    "repos": {
        "cognito": "https://github.com/cloudkommand/cognito",
        "iam": "https://github.com/cloudkommand/iam",
        "lambda": "https://github.com/cloudkommand/lambda",
        "dynamodb": "https://github.com/cloudkommand/dynamodb",
        "apigateway": "https://github.com/cloudkommand/apigateway",
        "s3": "https://github.com/cloudkommand/s3"
    }
}